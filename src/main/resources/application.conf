redis {
    # Connection settings
    host = "localhost"
    host = ${?REDIS_HOST}
    
    port = 6379
    port = ${?REDIS_PORT}
    
    password = null
    password = ${?REDIS_PASSWORD}
    
    database = 0
    database = ${?REDIS_DATABASE}
    
    # SSL/TLS settings
    ssl {
        enabled = false
        enabled = ${?REDIS_SSL_ENABLED}
        
        verify-peer = true
        verify-peer = ${?REDIS_SSL_VERIFY_PEER}
    }
    
    # Connection pool settings
    pool {
        max-total = 100
        max-idle = 50
        min-idle = 10
        max-wait = "5s"
        test-on-borrow = true
        test-on-return = false
        test-while-idle = true
    }
    
    # Timeout settings
    timeout {
        connect = "5s"
        command = "3s"
    }
    
    # Cache configuration
    cache {
        default-ttl = "30m"
        max-entries = 10000
        
        # Cache-specific TTLs
        user-cache-ttl = "1h"
        session-cache-ttl = "24h"
        api-cache-ttl = "5m"
    }
    
    # Pub/Sub configuration
    pubsub {
        # Channel patterns
        channels = [
            "notifications:*",
            "events:*",
            "alerts:*"
        ]
        
        # Subscription settings
        subscription-timeout = "30s"
        reconnect-delay = "1s"
    }
    
    # Redis Streams configuration
    streams {
        consumer-group = "app-group"
        consumer-name = "app-consumer-1"
        block-time = "1s"
        max-pending = 1000
        
        # Stream names
        events-stream = "events:stream"
        notifications-stream = "notifications:stream"
        analytics-stream = "analytics:stream"
    }
    
    # Distributed lock configuration
    lock {
        default-timeout = "30s"
        retry-delay = "100ms"
        max-retries = 3
        
        # Lock prefixes
        resource-lock-prefix = "lock:resource:"
        session-lock-prefix = "lock:session:"
        job-lock-prefix = "lock:job:"
    }
    
    # Rate limiting configuration
    rate-limit {
        # Default limits
        api-requests-per-minute = 100
        login-attempts-per-hour = 5
        password-reset-per-day = 3
        
        # Time windows
        default-window = "1m"
        burst-window = "10s"
    }
}

# Application configuration
app {
    name = "Redis Advanced Demo"
    version = "1.0.0"
    
    # Server settings (if running web components)
    server {
        port = 8080
        host = "localhost"
    }
    
    # Monitoring settings
    monitoring {
        enabled = true
        metrics-prefix = "redis.advanced"
        health-check-interval = "30s"
        
        # Export settings
        prometheus {
            enabled = true
            port = 9090
        }
    }
    
    # Logging configuration
    logging {
        level = "INFO"
        level = ${?LOG_LEVEL}
        
        # Component-specific logging
        redis-operations = "DEBUG"
        performance = "INFO"
        errors = "ERROR"
    }
}

# Performance tuning
performance {
    # Pipeline settings
    pipeline {
        enabled = true
        batch-size = 100
        flush-interval = "10ms"
    }
    
    # Compression settings
    compression {
        enabled = true
        threshold = 1024  # bytes
        algorithm = "gzip"
    }
    
    # Serialization settings
    serialization {
        format = "json"  # json, avro, protobuf
        pretty-print = false
    }
}
